language: minimal

sudo: false

env:
  - MOZ_HEADLESS=1

addons:
  firefox: latest

env:
  global:
    - secure: "JrdAJJKe+Y564LIiIaGPmw9X9utvj2lVI2MkVyZX6CQ7cJwqPUB+ukZpa6MnGUEJSoI6S7/5ZqX/cvciVAKpcYadi/snlDGq6q+lLnA+6rtB6ppy99Ib64aqm+VqDyohvvvrNtSxqhBY48DLG9UuQEcvviabpx9CG4s439/osspsA80SRXgDm/dELjU8vuIJvL1EFPeOu4a01sAHsqhknQw4F4YSWWjUr1oNjZIhSKroxCJV0o/0ok600SwTrQrbwJNO8QmEBOTw1JO1kaxDRlMAsJ5JTBaeGWdhqWQ3IRH/RogkU3ukOyyybbeoWU9ou5xG08P0r4CM3dGh44M8qrTOOCUSSNrFIG5OhAW6ZdkSR/2w76fNnW6y25jKUQ2444kd8n8+TObsp8aNl1FkCwou6/SpPluKvtaFA+I1zbk8roG58tW9anf6o9zCdIyYhSFysEoKNNihSC6xc4zHlJUHWr61f4zC0mU1Xf/djgpvj2YUQLsQ4++K6FNb6I/CN7LDl67kkOiyVCKv60J1mHVXAPJpj2Y9SxR87ob+GH+na8oFy5IMPMDoym2hPImtl2cjGvpP6RvE+gVE+mfvc4BizWfsR1zO49DUD15U1Y6jqhbcPMCgk5FoQ3ZKiH6LBeFbmV0qMjwSC6pZONgz8s/2nTUMV3VU+9SBiah51ho="

matrix:
  fast_finish: true
  include:
  - name: "python-3.6"
    env: PY=3.6
  - name: "python-3.7"
    env: PY=3.7
  - name: coding_standards
    env: PY=3.7
  - name: docs
    env: PY=3.7
  - name: "tarball"
    env: PY=3.7

before_install:
  # Install miniconda and create TEST env.
  - |
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update --quiet conda
    conda config --add channels conda-forge --force
    conda config --set channel_priority strict
    conda config --set safety_checks disabled
    conda create --name TEST python=$PY --file requirements.txt --file requirements-dev.txt
    source activate TEST
    conda info --all
  # Install firefox headless driver.
  - |
    wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz -O geckodriver.tar.gz
    mkdir geckodriver
    tar -xzf geckodriver.tar.gz -C geckodriver
    export PATH=$PATH:$PWD/geckodriver

install:
  - pip install -e . --no-deps --force-reinstall

script:
  - if [[ $TRAVIS_JOB_NAME == python-* ]]; then
      cp -r tests/ /tmp ;
      pushd /tmp && pytest -n 2 -rxs --cov=branca -vv tests && popd ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'tarball' ]]; then
      pip wheel . -w dist --no-deps ;
      check-manifest --verbose ;
      twine check dist/* ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'coding_standards' ]]; then
      pytest --flake8 -m flake8 ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'docs' ]]; then
      set -e ;
      conda install doctr ;
      pushd docs ;
      make clean html linkcheck ;
      popd ;
      python -m doctr deploy --sync --built-docs docs/build/html . ;
    fi

doctr:
  require-master: true
  sync: False

deploy:
  skip_cleanup: true
  provider: pypi
  user: ocefpaf
  password:
    secure: "LzZ9ppBFcqskCeMos99eAmLPRiG2pX8n2Ghf7O5Nd5KgJruZBNVq+uOAFtLkCBTheG+59HS75dQwmc2n2E8hmt1WPCTRpz6bffPl8hUzxuTBIPMzfdor8RmXvnMY+c8zAuWXH2ws166GzRApKMhrIZMv7d5OmZyUZgHTKsA4kyd9Nhz1nZdJf1ox3TbODl4OuGfUkQ8gVhA5LwdlJtzxbZlbPTUpTeu42plJawa2JtY20jiSbnu2mujR1UUuzkcnaBHhStjWYYMUQNtXdKonV5irQ9gNACnmlFSwSqDf1Jb74f3n3ojBMWIlMgCJCsPgssAtSaePuIB6HpS+xc7NCORBS1tkFyU0IHlMNXEpHGKCNXvAZVHGgDW71rQ0Gdg9bNpFd9vQ8IL6D+iBohjuxXRjdK1DWf6XlC/7N1aJB443LFtFOT7184AwmL3YNrqeZsaA3HfuMt1CGf3kC91SUn3BypQu+J+irtV7Z8ugOr8mcLcDuTuSAA8zM/VUeZToF29Xs0pwBTUJszkKL4+cxoNj/pXoL8JHQztL7e0BmD+qa4PoK8J87P1RkH2UwV7XSRzV2oWpiwRqPxMKK0HGM8oOckZJ5OcwF3yuNXGMC0hCw9TTW931auiwr4UZ254jxRPg/+HsojutBL0+z67szr3qzTNlO+FmXvwTChS8PW8="
  distributions: sdist bdist_wheel
  upload_docs: no
  on:
    repo: python-visualization/branca
    tags: true
    all_branches: master
    condition: '$TEST_TARGET == "docs"'
